{"version":3,"sources":["queries/devicesWiki.js","components/DevicesTable.js","components/App.js","index.js"],"names":["GET_DEVICES","gql","_templateObject","getNestedObject","wholeObj","fullPath","nestedObj","nestedPath","slice","Array","isArray","length","map","obj","concat","Object","keys","values","join","reduce","a","v","undefined","getNewestNestedDate","b","array2String","arrayObj2String","path","key1","key2","DevicesTable","state","data","anchorCol","loading","sorted","id","desc","filtered","value","columns","Header","accessor","show","style","whiteSpace","maintainers","filterable","react_default","createElement","index_es","href","codename","target","rel","handleColumnToggleClick","event","_this","setState","currentTarget","handleColumnToggleClose","handleCToggle","findIndex","x","checked","_this2","this","props","apolloClient","query","then","result","repository","object","entries","entry","safeLoad","text","schema","FAILSAFE_SCHEMA","_this$state","urlShow","filter","col","urlSort","urlFilter","btoa","unescape","encodeURIComponent","JSON","stringify","newRoute","history","location","search","push","_this3","classes","_this$state2","isColumnToggle","Boolean","className","root","title","onClick","icons_index_es","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","formControl","element","control","onChange","label","es","column","objectSpread","ReactTableDefaults","noDataText","showPagination","pageSize","minRows","defaultFilterMethod","row","pivotId","String","toLowerCase","includes","onSortedChange","newSorted","onFilteredChange","newFiltered","Component","withStyles","theme","width","marginTop","spacing","unit","overflowX","table","minWidth","margin","createMuiTheme","palette","primary","main","secondary","transitions","create","appBar","position","marginBottom","icon","marginRight","container","marginLeft","appName","flexGrow","columnIconInText","verticalAlign","react_router_dom","basename","react_router","render","_ref","styles","variant","color","noWrap","d","gutterBottom","components_DevicesTable","ApolloClient","uri","headers","authorization","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c8f4f87e.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nconst GET_DEVICES = gql`\n  {\n    repository(owner: \"LineageOS\", name: \"lineage_wiki\") {\n      object(expression: \"master:_data/devices\") {\n        ... on Tree {\n          entries {\n            name\n            object {\n              ... on Blob {\n                text\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default GET_DEVICES;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Paper,\n  Tooltip,\n  IconButton,\n  Popover,\n  Typography,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  FormHelperText,\n  Link,\n  Button\n} from \"@material-ui/core\";\nimport { ViewColumn } from \"@material-ui/icons\";\nimport { safeLoad, FAILSAFE_SCHEMA } from \"js-yaml\";\nimport ReactTable, { ReactTableDefaults } from \"react-table\";\nimport GET_DEVICES from \"../queries/devicesWiki\";\n\nimport \"react-table/react-table.css\";\n\n/**\n * Get object's value by key/array of keys\n * @param {Object|Array} wholeObj\n * @param {Array} fullPath\n */\nconst getNestedObject = (wholeObj, fullPath) => {\n  const nestedObj = wholeObj[fullPath[0]];\n  const nestedPath = fullPath.slice(1);\n\n  if (Array.isArray(nestedObj)) {\n    if (nestedPath.length === 0) {\n      return nestedObj\n        .map(obj => `${Object.keys(obj)[0]}: ${Object.values(obj)[0]}`)\n        .join(\"\\u000A\");\n    }\n    return nestedObj\n      .map(obj =>\n        nestedPath.reduce(\n          (a, v) =>\n            a[v] !== undefined\n              ? a[v]\n              : `${Object.keys(a)[0]}: ${Object.values(a)[0][v]}`,\n          obj\n        )\n      )\n      .join(\"\\u000A\");\n  }\n\n  if (typeof nestedObj === \"object\") {\n    return nestedObj ? nestedPath.reduce((a, v) => a[v], nestedObj) : \"\";\n  }\n\n  return nestedObj;\n};\n\n/**\n * Like getNestedObject but returns only newest date, if there are many. Useful for sorting\n */\nconst getNewestNestedDate = (wholeObj, fullPath) => {\n  const nestedObj = wholeObj[fullPath[0]];\n\n  if (Array.isArray(nestedObj)) {\n    const dates = nestedObj.map(obj => Object.values(obj)[0]);\n    return dates.reduce((a, b) => (a > b ? a : b));\n  }\n\n  return nestedObj;\n};\n\nconst array2String = (wholeObj, fullPath) =>\n  Array.isArray(wholeObj[fullPath]) ? wholeObj[fullPath].join(\", \") : \"\";\n\nconst arrayObj2String = (wholeObj, path, key1, key2) => {\n  if (wholeObj != null) {\n    const nestedObj = wholeObj[path];\n    return nestedObj != null\n      ? nestedObj.map(obj => `${obj[key1]}: ${obj[key2]}`).join(\"\\u000A\")\n      : \"\";\n  }\n  return \"\";\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  },\n  formControl: {\n    margin: theme.spacing.unit * 3\n  }\n});\n\nclass DevicesTable extends Component {\n  state = {\n    data: [],\n    anchorCol: null,\n    loading: true,\n    sorted: [\n      {\n        id: \"release\",\n        desc: true\n      }\n    ],\n    filtered: [\n      {\n        // default filter value\n        id: \"maintained\",\n        value: \"Yes\"\n      }\n    ],\n    // id must be provided\n    columns: [\n      {\n        id: \"codename\",\n        Header: \"Codename\",\n        accessor: \"codename\",\n        show: false\n      },\n      {\n        id: \"vendor\",\n        Header: \"Vendor\",\n        accessor: \"vendor\",\n        show: true\n      },\n      {\n        id: \"name\",\n        Header: \"Name\",\n        accessor: \"name\",\n        show: true\n      },\n      {\n        id: \"models\",\n        Header: \"Models\",\n        accessor: v => array2String(v, [\"models\"]),\n        show: false\n      },\n      {\n        id: \"cameras\",\n        Header: \"Сameras\",\n        accessor: v => getNestedObject(v, [\"cameras\", \"info\"]),\n        show: true\n      },\n      {\n        id: \"screen\",\n        Header: \"Screen size\",\n        accessor: \"screen\",\n        show: true\n      },\n      {\n        id: \"screen_res\",\n        Header: \"Screen resolution\",\n        accessor: \"screen_res\",\n        show: true\n      },\n      {\n        id: \"screen_ppi\",\n        Header: \"Screen ppi\",\n        accessor: \"screen_ppi\",\n        show: false\n      },\n      {\n        id: \"screen_tech\",\n        Header: \"Screen technology\",\n        accessor: \"screen_tech\",\n        show: false\n      },\n      {\n        id: \"storage\",\n        Header: \"Storage\",\n        accessor: \"storage\",\n        show: false\n      },\n      {\n        id: \"sdcard\",\n        Header: \"SD Card\",\n        accessor: \"sdcard\",\n        show: false\n      },\n      {\n        id: \"battery_capacity\",\n        Header: \"Battery capacity\",\n        accessor: v => getNestedObject(v, [\"battery\", \"capacity\"]),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"battery_removable\",\n        Header: \"Battery removable\",\n        accessor: v => getNestedObject(v, [\"battery\", \"removable\"]),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"battery_tech\",\n        Header: \"Battery tech\",\n        accessor: v => getNestedObject(v, [\"battery\", \"tech\"]),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"architecture\",\n        Header: \"Architecture\",\n        accessor: v => getNestedObject(v, [\"architecture\", \"cpu\"]),\n        show: false\n      },\n      {\n        id: \"soc\",\n        Header: \"System on a chip\",\n        accessor: \"soc\",\n        show: false\n      },\n      {\n        id: \"cpu\",\n        Header: \"CPU\",\n        accessor: \"cpu\",\n        show: false\n      },\n      {\n        id: \"cpu_cores\",\n        Header: \"CPU cores\",\n        accessor: \"cpu_cores\",\n        show: false\n      },\n      {\n        id: \"cpu_freq\",\n        Header: \"CPU frequency\",\n        accessor: \"cpu_freq\",\n        show: false\n      },\n      {\n        id: \"gpu\",\n        Header: \"GPU\",\n        accessor: \"gpu\",\n        show: false\n      },\n      {\n        id: \"bluetooth_spec\",\n        Header: \"Bluetooth\",\n        accessor: \"bluetooth.spec\",\n        show: false\n      },\n      {\n        id: \"ram\",\n        Header: \"RAM\",\n        accessor: \"ram\",\n        show: true\n      },\n      {\n        id: \"wifi\",\n        Header: \"Wi-Fi\",\n        accessor: \"wifi\",\n        show: false\n      },\n      {\n        id: \"network\",\n        Header: \"Network tech\",\n        accessor: v => getNestedObject(v, [\"network\", \"tech\"]),\n        show: false\n      },\n      {\n        id: \"network_bands\",\n        Header: \"Network bands\",\n        accessor: v => arrayObj2String(v, \"network\", \"tech\", \"bands\"),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"width\",\n        Header: \"Width\",\n        accessor: \"width\",\n        show: false\n      },\n      {\n        id: \"height\",\n        Header: \"Height\",\n        accessor: \"height\",\n        show: false\n      },\n      {\n        id: \"depth\",\n        Header: \"Depth\",\n        accessor: \"depth\",\n        show: false\n      },\n      {\n        id: \"maintained\",\n        Header: \"Maintained\",\n        accessor: v =>\n          Array.isArray(v.maintainers) && v.maintainers.length ? \"Yes\" : \"No\",\n        show: false\n      },\n      {\n        id: \"maintainers\",\n        Header: \"Maintainers\",\n        accessor: v => array2String(v, [\"maintainers\"]),\n        show: false\n      },\n      {\n        id: \"current_branch\",\n        Header: \"Current version\",\n        accessor: \"current_branch\",\n        show: false\n      },\n      {\n        id: \"versions\",\n        Header: \"Available versions\",\n        accessor: v => array2String(v, [\"versions\"]),\n        show: false\n      },\n      {\n        id: \"release\",\n        Header: \"Release date\",\n        accessor: v => getNewestNestedDate(v, [\"release\"]),\n        show: true\n      },\n      {\n        id: \"peripherals\",\n        Header: \"Peripherals\",\n        accessor: v => array2String(v, [\"peripherals\"]),\n        show: false\n      },\n      {\n        id: \"type\",\n        Header: \"Device type\",\n        accessor: \"type\",\n        show: false\n      },\n      {\n        id: \"wiki\",\n        Header: \"Wiki\",\n        filterable: false,\n        accessor: v => (\n          <Link\n            href={`https://wiki.lineageos.org/devices/${v.codename}`}\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            Open wiki\n          </Link>\n        ),\n        show: false\n      }\n    ]\n  };\n\n  componentDidMount() {\n    const { apolloClient } = this.props;\n    apolloClient\n      .query({\n        query: GET_DEVICES\n      })\n      .then(result =>\n        this.setState(\n          {\n            data: result.data.repository.object.entries.map(entry =>\n              safeLoad(entry.object.text, { schema: FAILSAFE_SCHEMA })\n            )\n          },\n          () => {\n            this.setState({ loading: false });\n          }\n        )\n      ); // FAILSAFE_SCHEMA will ensure that strings that look like date won't be converted\n  }\n\n  componentDidUpdate() {\n    const { columns, filtered, sorted } = this.state;\n\n    // Convert react-table state to URL format\n    const urlShow = columns\n      .filter(col => col.show)\n      .map(col => col.id)\n      .join(\"+\");\n\n    const urlSort = sorted\n      .map(col => (col.desc ? `${col.id}_desc` : col.id))\n      .join(\"+\");\n\n    const urlFilter = btoa(\n      unescape(encodeURIComponent(JSON.stringify(filtered)))\n    );\n    // JSON.parse(decodeURIComponent(escape(atob(colFilt))))\n\n    const newRoute = `?show=${urlShow}&sort=${urlSort}&filter=${urlFilter}`;\n    if (newRoute !== this.props.history.location.search) {\n      this.props.history.push(newRoute);\n    }\n\n    // TODO parse when no filter or sort\n  }\n\n  handleColumnToggleClick = event => {\n    this.setState({\n      anchorCol: event.currentTarget\n    });\n  };\n\n  handleColumnToggleClose = () => {\n    this.setState({\n      anchorCol: null\n    });\n  };\n\n  // Show/hide columns\n  handleCToggle = event => {\n    const { columns } = this.state;\n    columns[columns.findIndex(x => x.id === event.target.value)].show =\n      event.target.checked;\n    this.setState({ columns: columns.slice() }); // without making a shallow copy change doesn't get registered, as react doesn't handle nested updates\n    // TODO reconsider when react-table v7 is out, avoid nested state https://stackoverflow.com/a/51136076\n    // use immutability-helper\n    // related https://github.com/tannerlinsley/react-table/issues/294#issuecomment-311457211\n\n    //  TODO consider keeping in state only data that actually change (\"show\" property)\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { data, anchorCol, columns, loading, sorted, filtered } = this.state;\n    const isColumnToggle = Boolean(anchorCol);\n\n    return (\n      <Paper className={classes.root}>\n        <Tooltip title=\"Toggle columns\">\n          <IconButton onClick={this.handleColumnToggleClick}>\n            <ViewColumn />\n          </IconButton>\n        </Tooltip>\n        <Popover\n          id=\"simple-popper\"\n          open={isColumnToggle}\n          anchorEl={anchorCol}\n          onClose={this.handleColumnToggleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n          <FormControl className={classes.formControl}>\n            <FormLabel>Select visible columns</FormLabel>\n            <FormGroup>\n              {columns.map(element => (\n                <FormControlLabel\n                  control={<Checkbox onChange={this.handleCToggle} />}\n                  checked={element.show}\n                  label={element.Header}\n                  value={element.id}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Popover>\n        <Button href=\"#\">Reset</Button>\n        <ReactTable\n          data={data}\n          columns={columns}\n          column={{\n            ...ReactTableDefaults.column,\n            style: { whiteSpace: \"normal\" }\n          }}\n          noDataText={loading ? \"\" : \"No devices found...\"}\n          loading={loading}\n          showPagination={false}\n          pageSize={data.length}\n          minRows={5}\n          sorted={sorted}\n          filterable\n          filtered={filtered}\n          defaultFilterMethod={(filter, row) => {\n            const id = filter.pivotId || filter.id;\n            return row[id] != null\n              ? String(row[id])\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              : false;\n          }}\n          onSortedChange={newSorted => {\n            this.setState({ sorted: newSorted });\n          }}\n          onFilteredChange={newFiltered => {\n            this.setState({ filtered: newFiltered });\n          }}\n        />\n      </Paper>\n    );\n  }\n}\n\nDevicesTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  apolloClient: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DevicesTable);\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  withStyles,\n  IconButton,\n  SvgIcon,\n  Link,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core\";\nimport { Smartphone, ViewColumn } from \"@material-ui/icons\";\nimport DevicesTable from \"./DevicesTable\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\",\n    marginBottom: theme.spacing.unit * 3\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2\n  },\n  container: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3\n  },\n  appName: { flexGrow: 1 },\n  columnIconInText: { verticalAlign: \"middle\" }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#167c80\" },\n    secondary: { main: \"#008e9e\" }\n  },\n  transitions: {\n    // So we have `transition: none;` everywhere\n    create: () => \"none\"\n  }\n});\n\nfunction App(props) {\n  const { classes, apolloClient } = props;\n\n  return (\n    <HashRouter basename=\"/\">\n      <CssBaseline />\n      <Route\n        path=\"/\"\n        render={({ history }) => (\n          <MuiThemeProvider theme={theme}>\n            <AppBar position=\"static\" className={classes.appBar}>\n              <Toolbar>\n                <Smartphone className={classes.icon} />\n                <Typography\n                  className={classes.appName}\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  noWrap\n                >\n                  Linext\n                </Typography>\n                <IconButton\n                  href=\"https://github.com/anton-z-s/linext/\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  color=\"inherit\"\n                >\n                  <SvgIcon>\n                    <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n                  </SvgIcon>\n                </IconButton>\n              </Toolbar>\n            </AppBar>\n            <main className={classes.container}>\n              <Typography variant=\"h6\" gutterBottom>\n                This is a list of{\" \"}\n                <Link\n                  href=\"https://www.lineageos.org/\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  {\" \"}\n                  LineageOS\n                </Link>{\" \"}\n                devices, presented in a convenient way.\n              </Typography>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                You can sort (hold Shift to multi-sort), filter devices,\n                show/hide columns (\n                <ViewColumn className={classes.columnIconInText} />\n                ). All the info is straight out of the official wiki, always\n                up-to-date.\n              </Typography>\n              <DevicesTable apolloClient={apolloClient} history={history} />\n            </main>\n          </MuiThemeProvider>\n        )}\n      />\n    </HashRouter>\n  );\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  apolloClient: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"./components/App\";\n\nconst apolloClient = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    // public access only, nothing leaked here\n    authorization: \"Bearer d7f5d16a3e126aecfb40f83b0826ae2ef74bd21a\"\n  }\n  // this will get called on every request, can be used to dynamically set api key\n  // https://www.apollographql.com/docs/react/recipes/authentication#header\n  // request: operation => {\n  //   operation.setContext({\n  //     headers: {\n  //       authorization: \"Bearer <KEY>\"\n  //     }\n  //   });\n  // }\n});\n\nReactDOM.render(\n  <App apolloClient={apolloClient} />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}