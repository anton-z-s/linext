{"version":3,"sources":["queries/devicesWiki.js","components/DevicesTable.js","components/App.js","index.js"],"names":["GET_DEVICES","gql","_templateObject","getNestedObject","wholeObj","fullPath","nestedObj","nestedPath","slice","Array","isArray","length","map","obj","concat","Object","keys","values","join","reduce","a","v","undefined","getNewestNestedDate","b","array2String","arrayObj2String","path","key1","key2","getStateFromURL","oldColumns","find","res","query","URLSearchParams","get","newVisibleColumns","split","columns","col","objectSpread","show","includes","id","sorted","sort","endsWith","desc","filtered","JSON","parse","decodeURIComponent","escape","atob","DevicesTable","state","data","anchorCol","loading","value","Header","accessor","Filter","_ref","filter","onChange","selectedOptions","_this","f","react_default","createElement","index_es","multiple","event","push","apply","toConsumableArray","target","input","renderValue","selected","getFilterOptions","style","whiteSpace","maintainers","filterable","href","codename","rel","handleColumnToggleClick","setState","currentTarget","handleColumnToggleClose","handleCToggle","findIndex","x","checked","_this2","this","_this$props","props","apolloClient","location","history","then","result","repository","object","entries","entry","safeLoad","text","schema","FAILSAFE_SCHEMA","stateFromURL","search","listen","locationHist","prevProps","prevState","_this$state","_this$props2","urlShow","urlSort","urlFilter","btoa","unescape","encodeURIComponent","stringify","newQuery","pathname","fired_by_table","column","Set","d","key","primary","_this3","classes","_this$state2","isColumnToggle","Boolean","className","root","title","onClick","icons_index_es","open","anchorEl","onClose","anchorOrigin","vertical","horizontal","transformOrigin","formControl","control","label","component","Link","to","es","ReactTableDefaults","noDataText","showPagination","pageSize","minRows","defaultFilterMethod","row","pivotId","some","val","String","toLowerCase","onSortedChange","newSorted","onFilteredChange","newFiltered","Component","withStyles","theme","width","marginTop","spacing","unit","overflowX","table","minWidth","margin","createMuiTheme","palette","main","secondary","transitions","create","appBar","position","marginBottom","icon","marginRight","container","marginLeft","appName","flexGrow","columnIconInText","verticalAlign","react_router_dom","basename","react_router","render","styles","variant","color","noWrap","gutterBottom","components_DevicesTable","ApolloClient","uri","headers","authorization","ReactDOM","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3d856c11.chunk.js","sourcesContent":["import { gql } from \"apollo-boost\";\n\nconst GET_DEVICES = gql`\n  {\n    repository(owner: \"LineageOS\", name: \"lineage_wiki\") {\n      object(expression: \"master:_data/devices\") {\n        ... on Tree {\n          entries {\n            name\n            object {\n              ... on Blob {\n                text\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default GET_DEVICES;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {\n  Paper,\n  Tooltip,\n  IconButton,\n  Popover,\n  FormControl,\n  FormLabel,\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  Button,\n  Link as MUILink,\n  Select,\n  Input,\n  MenuItem,\n  ListItemText\n} from \"@material-ui/core\";\nimport { ViewColumn } from \"@material-ui/icons\";\nimport { safeLoad, FAILSAFE_SCHEMA } from \"js-yaml\";\nimport ReactTable, { ReactTableDefaults } from \"react-table\";\nimport { Link } from \"react-router-dom\";\nimport GET_DEVICES from \"../queries/devicesWiki\";\n\nimport \"react-table/react-table.css\";\n\n// TODO form default URL on first load, so there is no inconsistency between this and initial state\nconst DEFAULT_URL =\n  \"?columns=vendor|name|cameras|screen|screen_res|ram|release&sorted=release_desc&filtered=W3siaWQiOiJtYWludGFpbmVkIiwidmFsdWUiOiJZZXMifSx7ImlkIjoidmVuZG9yIiwidmFsdWUiOltdfV0=\";\n\n/**\n * Get object's value by key/array of keys\n * @param {Object|Array} wholeObj\n * @param {Array} fullPath\n */\nconst getNestedObject = (wholeObj, fullPath) => {\n  const nestedObj = wholeObj[fullPath[0]];\n  const nestedPath = fullPath.slice(1);\n\n  if (Array.isArray(nestedObj)) {\n    if (nestedPath.length === 0) {\n      return nestedObj\n        .map(obj => `${Object.keys(obj)[0]}: ${Object.values(obj)[0]}`)\n        .join(\"\\u000A\");\n    }\n    return nestedObj\n      .map(obj =>\n        nestedPath.reduce(\n          (a, v) =>\n            a[v] !== undefined\n              ? a[v]\n              : `${Object.keys(a)[0]}: ${Object.values(a)[0][v]}`,\n          obj\n        )\n      )\n      .join(\"\\u000A\");\n  }\n\n  if (typeof nestedObj === \"object\") {\n    return nestedObj ? nestedPath.reduce((a, v) => a[v], nestedObj) : \"\";\n  }\n\n  return nestedObj;\n};\n\n/**\n * Like getNestedObject but returns only newest date, if there are many. Useful for sorting\n */\nconst getNewestNestedDate = (wholeObj, fullPath) => {\n  const nestedObj = wholeObj[fullPath[0]];\n\n  if (Array.isArray(nestedObj)) {\n    const dates = nestedObj.map(obj => Object.values(obj)[0]);\n    return dates.reduce((a, b) => (a > b ? a : b));\n  }\n\n  return nestedObj;\n};\n\nconst array2String = (wholeObj, fullPath) =>\n  Array.isArray(wholeObj[fullPath]) ? wholeObj[fullPath].join(\", \") : \"\";\n\nconst arrayObj2String = (wholeObj, path, key1, key2) => {\n  if (wholeObj != null) {\n    const nestedObj = wholeObj[path];\n    return nestedObj != null\n      ? nestedObj.map(obj => `${obj[key1]}: ${obj[key2]}`).join(\"\\u000A\")\n      : \"\";\n  }\n  return \"\";\n};\n\nconst getStateFromURL = (oldColumns, find) => {\n  const res = {};\n  const query = new URLSearchParams(find);\n\n  if (query.get(\"columns\")) {\n    const newVisibleColumns = query.get(\"columns\").split(\"|\");\n    res.columns = oldColumns.map(col => {\n      return { ...col, show: newVisibleColumns.includes(col.id) };\n    });\n  }\n\n  if (query.get(\"sorted\")) {\n    res.sorted = query\n      .get(\"sorted\")\n      .split(\"|\")\n      .map(sort => {\n        return {\n          id: sort.endsWith(\"_desc\") ? sort.slice(0, -5) : sort,\n          desc: sort.endsWith(\"_desc\")\n        };\n      });\n  }\n\n  if (query.get(\"filtered\")) {\n    res.filtered = JSON.parse(\n      decodeURIComponent(escape(atob(query.get(\"filtered\"))))\n    );\n  }\n\n  return res;\n};\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3,\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  },\n  formControl: {\n    margin: theme.spacing.unit * 3\n  }\n});\n\nclass DevicesTable extends Component {\n  state = {\n    data: [],\n    anchorCol: null,\n    loading: true,\n    sorted: [\n      {\n        id: \"release\",\n        desc: true\n      }\n    ],\n    filtered: [\n      {\n        // default filter value\n        id: \"maintained\",\n        value: \"Yes\"\n      },\n      // next ones are necessary for selectable filters\n      {\n        id: \"vendor\",\n        value: []\n      }\n    ],\n    // id must be provided\n    columns: [\n      {\n        id: \"codename\",\n        Header: \"Codename\",\n        accessor: \"codename\",\n        show: false\n      },\n      {\n        id: \"vendor\",\n        Header: \"Vendor\",\n        accessor: \"vendor\",\n        Filter: ({ filter, onChange }) => {\n          const selectedOptions = this.state.filtered.find(\n            f => f.id === \"vendor\"\n          ).value;\n\n          return (\n            <Select\n              multiple\n              value={selectedOptions}\n              onChange={event => {\n                selectedOptions.length = 0;\n                // not using setState() as there is need to monitor changes and for performance reasons\n                selectedOptions.push(...event.target.value);\n                return onChange(selectedOptions);\n              }}\n              input={<Input id=\"select-multiple-checkbox\" />}\n              renderValue={selected => selected.join(\", \")}\n            >\n              {this.getFilterOptions(\"vendor\", selectedOptions)}\n            </Select>\n          );\n        },\n        show: true\n      },\n      {\n        id: \"name\",\n        Header: \"Name\",\n        accessor: \"name\",\n        show: true\n      },\n      {\n        id: \"models\",\n        Header: \"Models\",\n        accessor: v => array2String(v, [\"models\"]),\n        show: false\n      },\n      {\n        id: \"cameras\",\n        Header: \"Сameras\",\n        accessor: v => getNestedObject(v, [\"cameras\", \"info\"]),\n        show: true\n      },\n      {\n        id: \"screen\",\n        Header: \"Screen size\",\n        accessor: \"screen\",\n        show: true\n      },\n      {\n        id: \"screen_res\",\n        Header: \"Screen resolution\",\n        accessor: \"screen_res\",\n        show: true\n      },\n      {\n        id: \"screen_ppi\",\n        Header: \"Screen ppi\",\n        accessor: \"screen_ppi\",\n        show: false\n      },\n      {\n        id: \"screen_tech\",\n        Header: \"Screen technology\",\n        accessor: \"screen_tech\",\n        show: false\n      },\n      {\n        id: \"storage\",\n        Header: \"Storage\",\n        accessor: \"storage\",\n        show: false\n      },\n      {\n        id: \"sdcard\",\n        Header: \"SD Card\",\n        accessor: \"sdcard\",\n        show: false\n      },\n      {\n        id: \"battery_capacity\",\n        Header: \"Battery capacity\",\n        accessor: v => getNestedObject(v, [\"battery\", \"capacity\"]),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"battery_removable\",\n        Header: \"Battery removable\",\n        accessor: v => getNestedObject(v, [\"battery\", \"removable\"]),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"battery_tech\",\n        Header: \"Battery tech\",\n        accessor: v => getNestedObject(v, [\"battery\", \"tech\"]),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"architecture\",\n        Header: \"Architecture\",\n        accessor: v => getNestedObject(v, [\"architecture\", \"cpu\"]),\n        show: false\n      },\n      {\n        id: \"soc\",\n        Header: \"System on a chip\",\n        accessor: \"soc\",\n        show: false\n      },\n      {\n        id: \"cpu\",\n        Header: \"CPU\",\n        accessor: \"cpu\",\n        show: false\n      },\n      {\n        id: \"cpu_cores\",\n        Header: \"CPU cores\",\n        accessor: \"cpu_cores\",\n        show: false\n      },\n      {\n        id: \"cpu_freq\",\n        Header: \"CPU frequency\",\n        accessor: \"cpu_freq\",\n        show: false\n      },\n      {\n        id: \"gpu\",\n        Header: \"GPU\",\n        accessor: \"gpu\",\n        show: false\n      },\n      {\n        id: \"bluetooth_spec\",\n        Header: \"Bluetooth\",\n        accessor: \"bluetooth.spec\",\n        show: false\n      },\n      {\n        id: \"ram\",\n        Header: \"RAM\",\n        accessor: \"ram\",\n        show: true\n      },\n      {\n        id: \"wifi\",\n        Header: \"Wi-Fi\",\n        accessor: \"wifi\",\n        show: false\n      },\n      {\n        id: \"network\",\n        Header: \"Network tech\",\n        accessor: v => getNestedObject(v, [\"network\", \"tech\"]),\n        show: false\n      },\n      {\n        id: \"network_bands\",\n        Header: \"Network bands\",\n        accessor: v => arrayObj2String(v, \"network\", \"tech\", \"bands\"),\n        style: { whiteSpace: \"pre-wrap\" },\n        show: false\n      },\n      {\n        id: \"width\",\n        Header: \"Width\",\n        accessor: \"width\",\n        show: false\n      },\n      {\n        id: \"height\",\n        Header: \"Height\",\n        accessor: \"height\",\n        show: false\n      },\n      {\n        id: \"depth\",\n        Header: \"Depth\",\n        accessor: \"depth\",\n        show: false\n      },\n      {\n        id: \"maintained\",\n        Header: \"Maintained\",\n        accessor: v =>\n          Array.isArray(v.maintainers) && v.maintainers.length ? \"Yes\" : \"No\",\n        show: false\n      },\n      {\n        id: \"maintainers\",\n        Header: \"Maintainers\",\n        accessor: v => array2String(v, [\"maintainers\"]),\n        show: false\n      },\n      {\n        id: \"current_branch\",\n        Header: \"Current version\",\n        accessor: \"current_branch\",\n        show: false\n      },\n      {\n        id: \"versions\",\n        Header: \"Available versions\",\n        accessor: v => array2String(v, [\"versions\"]),\n        show: false\n      },\n      {\n        id: \"release\",\n        Header: \"Release date\",\n        accessor: v => getNewestNestedDate(v, [\"release\"]),\n        show: true\n      },\n      {\n        id: \"peripherals\",\n        Header: \"Peripherals\",\n        accessor: v => array2String(v, [\"peripherals\"]),\n        show: false\n      },\n      {\n        id: \"type\",\n        Header: \"Device type\",\n        accessor: \"type\",\n        show: false\n      },\n      {\n        id: \"wiki\",\n        Header: \"Wiki\",\n        filterable: false,\n        accessor: v => (\n          <MUILink\n            href={`https://wiki.lineageos.org/devices/${v.codename}`}\n            target=\"_blank\"\n            rel=\"noopener\"\n          >\n            Open wiki\n          </MUILink>\n        ),\n        show: false\n      }\n    ]\n  };\n\n  componentDidMount() {\n    const { columns } = this.state;\n    const { apolloClient, location, history } = this.props;\n    apolloClient\n      .query({\n        query: GET_DEVICES\n      })\n      .then(result =>\n        this.setState(\n          {\n            data: result.data.repository.object.entries.map(entry =>\n              safeLoad(entry.object.text, { schema: FAILSAFE_SCHEMA })\n            )\n          },\n          () => {\n            const stateFromURL = getStateFromURL(columns, location.search);\n            this.setState({ loading: false, ...stateFromURL });\n          }\n        )\n      ); // FAILSAFE_SCHEMA will ensure that strings that look like date won't be converted\n\n    history.listen(locationHist => {\n      const stateFromURL = getStateFromURL(columns, locationHist.search);\n      this.setState({ ...stateFromURL });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { columns, sorted, filtered, loading } = this.state;\n    const { location, history } = this.props;\n\n    if (!loading) {\n      // if state changed due to user actions\n      if (\n        columns !== prevState.columns ||\n        sorted !== prevState.sorted ||\n        filtered !== prevState.filtered\n      ) {\n        // Convert react-table state to URL format\n        const urlShow = columns\n          .filter(col => col.show)\n          .map(col => col.id)\n          .join(\"|\");\n\n        const urlSort = sorted\n          .map(col => (col.desc ? `${col.id}_desc` : col.id))\n          .join(\"|\");\n\n        const urlFilter = btoa(\n          unescape(encodeURIComponent(JSON.stringify(filtered)))\n        );\n\n        const newQuery = `?columns=${urlShow}&sorted=${urlSort}&filtered=${urlFilter}`;\n        if (newQuery !== location.search) {\n          history.push({\n            pathname: \"/\",\n            search: newQuery,\n            state: { fired_by_table: true }\n          });\n        }\n      }\n    }\n  }\n\n  getFilterOptions(column, selectedOptions) {\n    const { data } = this.state;\n    const uniqueValues = [...new Set(data.map(d => d[column]))].sort();\n    return uniqueValues.map(value => (\n      <MenuItem key={value} value={value}>\n        <Checkbox checked={selectedOptions.includes(value)} />\n        <ListItemText primary={value} />\n      </MenuItem>\n    ));\n  }\n\n  handleColumnToggleClick = event => {\n    this.setState({\n      anchorCol: event.currentTarget\n    });\n  };\n\n  handleColumnToggleClose = () => {\n    this.setState({\n      anchorCol: null\n    });\n  };\n\n  // Show/hide columns\n  handleCToggle = event => {\n    const { columns } = this.state;\n    columns[columns.findIndex(x => x.id === event.target.value)].show =\n      event.target.checked;\n    this.setState({ columns: columns.slice() }); // without making a shallow copy change doesn't get registered, as react doesn't handle nested updates\n    // TODO reconsider when react-table v7 is out, avoid nested state https://stackoverflow.com/a/51136076\n    // use immutability-helper\n    // related https://github.com/tannerlinsley/react-table/issues/294#issuecomment-311457211\n\n    //  TODO consider keeping in state only data that actually change (\"show\" property)\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { data, anchorCol, columns, loading, sorted, filtered } = this.state;\n    const isColumnToggle = Boolean(anchorCol);\n\n    return (\n      <Paper className={classes.root}>\n        <Tooltip title=\"Toggle columns\">\n          <IconButton onClick={this.handleColumnToggleClick}>\n            <ViewColumn />\n          </IconButton>\n        </Tooltip>\n        <Popover\n          id=\"simple-popper\"\n          open={isColumnToggle}\n          anchorEl={anchorCol}\n          onClose={this.handleColumnToggleClose}\n          anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\"\n          }}\n          transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\"\n          }}\n        >\n          <FormControl className={classes.formControl}>\n            <FormLabel>Select visible columns</FormLabel>\n            <FormGroup>\n              {columns.map(column => (\n                <FormControlLabel\n                  control={<Checkbox onChange={this.handleCToggle} />}\n                  checked={column.show}\n                  label={column.Header}\n                  value={column.id}\n                />\n              ))}\n            </FormGroup>\n          </FormControl>\n        </Popover>\n        <Button component={Link} to={`/${DEFAULT_URL}`}>\n          Reset\n        </Button>\n        <ReactTable\n          data={data}\n          columns={columns}\n          column={{\n            ...ReactTableDefaults.column,\n            style: { whiteSpace: \"normal\" }\n          }}\n          noDataText={loading ? \"\" : \"No devices found...\"}\n          loading={loading}\n          showPagination={false}\n          pageSize={data.length}\n          minRows={5}\n          sorted={sorted}\n          filterable\n          filtered={filtered}\n          defaultFilterMethod={(filter, row) => {\n            const id = filter.pivotId || filter.id;\n            if (Array.isArray(filter.value)) {\n              if (filter.value.length === 0) return true;\n              return row[id] != null\n                ? filter.value.some(val =>\n                    String(row[id])\n                      .toLowerCase()\n                      .includes(val.toLowerCase())\n                  )\n                : false;\n            }\n            return row[id] != null\n              ? String(row[id])\n                  .toLowerCase()\n                  .includes(filter.value.toLowerCase())\n              : false;\n          }}\n          onSortedChange={newSorted => {\n            this.setState({ sorted: newSorted });\n          }}\n          onFilteredChange={newFiltered => {\n            this.setState({ filtered: newFiltered });\n          }}\n        />\n      </Paper>\n    );\n  }\n}\n\nDevicesTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  apolloClient: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DevicesTable);\n","import React from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  CssBaseline,\n  withStyles,\n  IconButton,\n  SvgIcon,\n  Link,\n  createMuiTheme,\n  MuiThemeProvider\n} from \"@material-ui/core\";\nimport { Smartphone, ViewColumn } from \"@material-ui/icons\";\nimport DevicesTable from \"./DevicesTable\";\n\nconst styles = theme => ({\n  appBar: {\n    position: \"relative\",\n    marginBottom: theme.spacing.unit * 3\n  },\n  icon: {\n    marginRight: theme.spacing.unit * 2\n  },\n  container: {\n    width: \"auto\",\n    marginLeft: theme.spacing.unit * 3,\n    marginRight: theme.spacing.unit * 3,\n    marginBottom: theme.spacing.unit * 3\n  },\n  appName: { flexGrow: 1 },\n  columnIconInText: { verticalAlign: \"middle\" }\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: { main: \"#167c80\" },\n    secondary: { main: \"#008e9e\" }\n  },\n  transitions: {\n    // So we have `transition: none;` everywhere\n    create: () => \"none\"\n  }\n});\n\nfunction App(props) {\n  const { classes, apolloClient } = props;\n\n  return (\n    <HashRouter basename=\"/\">\n      <CssBaseline />\n      <Route\n        path=\"/\"\n        render={({ location, history }) => (\n          <MuiThemeProvider theme={theme}>\n            <AppBar position=\"static\" className={classes.appBar}>\n              <Toolbar>\n                <Smartphone className={classes.icon} />\n                <Typography\n                  className={classes.appName}\n                  variant=\"h6\"\n                  color=\"inherit\"\n                  noWrap\n                >\n                  Linext\n                </Typography>\n                <IconButton\n                  href=\"https://github.com/anton-z-s/linext/\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                  color=\"inherit\"\n                >\n                  <SvgIcon>\n                    <path d=\"M12 .3a12 12 0 0 0-3.8 23.4c.6.1.8-.3.8-.6v-2c-3.3.7-4-1.6-4-1.6-.6-1.4-1.4-1.8-1.4-1.8-1-.7.1-.7.1-.7 1.2 0 1.9 1.2 1.9 1.2 1 1.8 2.8 1.3 3.5 1 0-.8.4-1.3.7-1.6-2.7-.3-5.5-1.3-5.5-6 0-1.2.5-2.3 1.3-3.1-.2-.4-.6-1.6 0-3.2 0 0 1-.3 3.4 1.2a11.5 11.5 0 0 1 6 0c2.3-1.5 3.3-1.2 3.3-1.2.6 1.6.2 2.8 0 3.2.9.8 1.3 1.9 1.3 3.2 0 4.6-2.8 5.6-5.5 5.9.5.4.9 1 .9 2.2v3.3c0 .3.1.7.8.6A12 12 0 0 0 12 .3\" />\n                  </SvgIcon>\n                </IconButton>\n              </Toolbar>\n            </AppBar>\n            <main className={classes.container}>\n              <Typography variant=\"h6\" gutterBottom>\n                This is a list of{\" \"}\n                <Link\n                  href=\"https://www.lineageos.org/\"\n                  target=\"_blank\"\n                  rel=\"noopener\"\n                >\n                  {\" \"}\n                  LineageOS\n                </Link>{\" \"}\n                devices, presented in a convenient way.\n              </Typography>\n              <Typography variant=\"subtitle1\" gutterBottom>\n                You can sort (hold Shift to multi-sort), filter devices,\n                show/hide columns (\n                <ViewColumn className={classes.columnIconInText} />\n                ). All the info is straight out of the official wiki, always\n                up-to-date.\n              </Typography>\n              <DevicesTable apolloClient={apolloClient} location={location} history={history} />\n            </main>\n          </MuiThemeProvider>\n        )}\n      />\n    </HashRouter>\n  );\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  apolloClient: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"typeface-roboto\";\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport App from \"./components/App\";\n\nconst apolloClient = new ApolloClient({\n  uri: \"https://api.github.com/graphql\",\n  headers: {\n    // public access only, nothing leaked here\n    authorization: \"Bearer d7f5d16a3e126aecfb40f83b0826ae2ef74bd21a\"\n  }\n  // this will get called on every request, can be used to dynamically set api key\n  // https://www.apollographql.com/docs/react/recipes/authentication#header\n  // request: operation => {\n  //   operation.setContext({\n  //     headers: {\n  //       authorization: \"Bearer <KEY>\"\n  //     }\n  //   });\n  // }\n});\n\nReactDOM.render(\n  <App apolloClient={apolloClient} />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}